syntax = "proto3";

package dfs_service;

import "google/protobuf/timestamp.proto";

service DFSService {

    // Add your service calls here

    // 1. REQUIRED (Parts 1 & 2): A method to store files on the server
    rpc Store (stream FileChunk) returns (Empty);

    // 2. REQUIRED (Parts 1 & 2): A method to fetch files from the server
    rpc Fetch (File) returns (stream FileChunk);

    // 3. REQUIRED (Parts 1 & 2): A method to delete files from the server
    rpc Delete (File) returns (Empty);

    // 4. REQUIRED (Parts 1 & 2): A method to list all files on the server
    rpc List (Empty) returns (FileList);

    // 5. REQUIRED (Parts 1 & 2): A method to get the status of a file on the server
    rpc Stat (File) returns (FileStat);
    // 7. Any other methods you deem necessary to complete the tasks of this assignment

}

message FileChunk {
    string file_name = 1;
    bytes buffer = 2;
}

message Empty {
}

message File {
    string file_name = 1;
}

message FileStat {
    string file_name = 1;
    uint64 size = 4;
    google.protobuf.Timestamp mtime = 2; // time modified
    google.protobuf.Timestamp ctime = 3; // time created
}

message FileList {
    repeated FileStat file = 1;
}

// Add your message types here

